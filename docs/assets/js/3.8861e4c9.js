(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{202:function(t,a,e){t.exports=e.p+"assets/img/Screenshot_3.9880aa3c.png"},203:function(t,a,e){t.exports=e.p+"assets/img/Screenshot_4.f9e1ca1b.png"},204:function(t,a,e){t.exports=e.p+"assets/img/Screenshot_5.723302aa.png"},205:function(t,a,e){t.exports=e.p+"assets/img/Screenshot_6.39ff4441.png"},214:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"создание-образов"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#создание-образов"}},[t._v("#")]),t._v(" Создание образов")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#dockerfile"}},[t._v("Dockerfile")])]),s("li",[s("a",{attrs:{href:"#именование-образов"}},[t._v("Именование образов")])]),s("li",[s("a",{attrs:{href:"#сохранение-контейнеров-в-образы-commit"}},[t._v("Сохранение контейнеров в образы (commit)")])]),s("li",[s("a",{attrs:{href:"#копирование-файnов-в-контейнер-dockerfile-copy"}},[t._v("Копирование файлов в контейнер (Dockerfile - COPY)")])]),s("li",[s("a",{attrs:{href:"#открытие-порта-дnя-контейнера-port-mapping"}},[t._v("Открытие порта для контейнера (port mapping)")])]),s("li",[s("a",{attrs:{href:"#ускорение-построения-образа-cache-boost"}},[t._v("Ускорение построения образа (cache boost)")])])])]),s("p"),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),s("p",[t._v("Dockerfile - файл инструкций для создание образа")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# Use an existiing docker image as a base\nFROM alpine\n\n# Download and install deps\nRUN apk add --update redis\n\n# Tell the image what to do when it starts as container\nCMD ["redis-server"]\n')])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# . - dot is context (that means incapsulate current files into container)")]),t._v("\ndocker build "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# getting <image-id> OR docker images")]),t._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"именование-образов"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#именование-образов"}},[t._v("#")]),t._v(" Именование образов")]),t._v(" "),s("p",[s("img",{attrs:{src:e(202),alt:""}})]),t._v(" "),s("p",[t._v("Составление правильного название\n"),s("img",{attrs:{src:e(203),alt:""}})]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whole option of naming")]),t._v("\ndocker build -t nikeweke/my_image:latest "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or ")]),t._v("\ndocker build -t my_image "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# getting <image-id> OR docker images")]),t._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"сохранение-контейнеров-в-образы-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#сохранение-контейнеров-в-образы-commit"}},[t._v("#")]),t._v(" Сохранение контейнеров в образы (commit)")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# starting alpine and open shell there")]),t._v("\ndocker run -it alpine "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# installing there redis (changing file system)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" apk "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --update redis\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Leaving this console and openning another")]),t._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# finding container id")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "-c" - set default command of image')]),t._v("\ndocker commit -c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CMD [\"redis-server\"]'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"копирование-файnов-в-контейнер-dockerfile-copy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#копирование-файnов-в-контейнер-dockerfile-copy"}},[t._v("#")]),t._v(" Копирование файлов в контейнер (Dockerfile - COPY)")]),t._v(" "),s("p",[s("img",{attrs:{src:e(204),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"открытие-порта-дnя-контейнера-port-mapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#открытие-порта-дnя-контейнера-port-mapping"}},[t._v("#")]),t._v(" Открытие порта для контейнера (port mapping)")]),t._v(" "),s("p",[s("img",{attrs:{src:e(205),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"ускорение-построения-образа-cache-boost"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ускорение-построения-образа-cache-boost"}},[t._v("#")]),t._v(" Ускорение построения образа (cache boost)")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# Use an existiing docker image as a base\nFROM node:alpine\n\n# Make directory if not exist and set pwd there for COPY, ADD, etc.\nWORKDIR /usr/app\n\n# ====================================> Why we run first "copy package.json" & "npm install"?\n# ====================================> Cuz when we change only our source file "app.js" it will rebuild all steps after it and install deps\n# Download and install deps \nCOPY ./package*.json ./\nRUN npm install\n\n# Copying project\n# First path - is path to folder to copy from on relative to build context \n# (docker run build .) - dot is context\nCOPY ./ ./\n\n\n# Tell the image what to do when it starts as container\nCMD ["node", "app"]\n\n')])])])])}),[],!1,null,null,null);a.default=n.exports}}]);